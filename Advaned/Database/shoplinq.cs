#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



public partial class Shop : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertCounter(Counter instance);
  partial void UpdateCounter(Counter instance);
  partial void DeleteCounter(Counter instance);
  partial void InsertCustomer(Customer instance);
  partial void UpdateCustomer(Customer instance);
  partial void DeleteCustomer(Customer instance);
  partial void InsertOrderDetail(OrderDetail instance);
  partial void UpdateOrderDetail(OrderDetail instance);
  partial void DeleteOrderDetail(OrderDetail instance);
  partial void InsertProduct(Product instance);
  partial void UpdateProduct(Product instance);
  partial void DeleteProduct(Product instance);
  #endregion
	
	public Shop(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Shop(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Shop(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Shop(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Counter> Counter
	{
		get
		{
			return this.GetTable<Counter>();
		}
	}
	
	public System.Data.Linq.Table<Customer> Customer
	{
		get
		{
			return this.GetTable<Customer>();
		}
	}
	
	public System.Data.Linq.Table<OrderDetail> OrderDetail
	{
		get
		{
			return this.GetTable<OrderDetail>();
		}
	}
	
	public System.Data.Linq.Table<Product> Product
	{
		get
		{
			return this.GetTable<Product>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Counter")]
public partial class Counter : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Name;
	
	private int _CurrentValue;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCurrentValueChanging(int value);
    partial void OnCurrentValueChanged();
    #endregion
	
	public Counter()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentValue", DbType="Int NOT NULL")]
	public int CurrentValue
	{
		get
		{
			return this._CurrentValue;
		}
		set
		{
			if ((this._CurrentValue != value))
			{
				this.OnCurrentValueChanging(value);
				this.SendPropertyChanging();
				this._CurrentValue = value;
				this.SendPropertyChanged("CurrentValue");
				this.OnCurrentValueChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CustomerId;
	
	private string _Password;
	
	private string _Email;
	
	private System.Nullable<decimal> _Credit;
	
	private EntitySet<OrderDetail> _OrderDetail;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIdChanging(string value);
    partial void OnCustomerIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCreditChanging(System.Nullable<decimal> value);
    partial void OnCreditChanged();
    #endregion
	
	public Customer()
	{
		this._OrderDetail = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetail), new Action<OrderDetail>(this.detach_OrderDetail));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="NVarChar(8) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CustomerId
	{
		get
		{
			return this._CustomerId;
		}
		set
		{
			if ((this._CustomerId != value))
			{
				this.OnCustomerIdChanging(value);
				this.SendPropertyChanging();
				this._CustomerId = value;
				this.SendPropertyChanged("CustomerId");
				this.OnCustomerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(8)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(24) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Decimal(8,2)")]
	public System.Nullable<decimal> Credit
	{
		get
		{
			return this._Credit;
		}
		set
		{
			if ((this._Credit != value))
			{
				this.OnCreditChanging(value);
				this.SendPropertyChanging();
				this._Credit = value;
				this.SendPropertyChanged("Credit");
				this.OnCreditChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_OrderDetail_Customer", Storage="_OrderDetail", ThisKey="CustomerId", OtherKey="CustomerId", DeleteRule="NO ACTION")]
	public EntitySet<OrderDetail> OrderDetail
	{
		get
		{
			return this._OrderDetail;
		}
		set
		{
			this._OrderDetail.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_OrderDetail(OrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Customer = this;
	}
	
	private void detach_OrderDetail(OrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Customer = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDetail")]
public partial class OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _OrderNo;
	
	private System.DateTime _OrderDate;
	
	private string _CustomerId;
	
	private int _ProductNo;
	
	private int _Quantity;
	
	private EntityRef<Customer> _Customer;
	
	private EntityRef<Product> _Product;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderNoChanging(int value);
    partial void OnOrderNoChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnCustomerIdChanging(string value);
    partial void OnCustomerIdChanged();
    partial void OnProductNoChanging(int value);
    partial void OnProductNoChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
	
	public OrderDetail()
	{
		this._Customer = default(EntityRef<Customer>);
		this._Product = default(EntityRef<Product>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int OrderNo
	{
		get
		{
			return this._OrderNo;
		}
		set
		{
			if ((this._OrderNo != value))
			{
				this.OnOrderNoChanging(value);
				this.SendPropertyChanging();
				this._OrderNo = value;
				this.SendPropertyChanged("OrderNo");
				this.OnOrderNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
	public System.DateTime OrderDate
	{
		get
		{
			return this._OrderDate;
		}
		set
		{
			if ((this._OrderDate != value))
			{
				this.OnOrderDateChanging(value);
				this.SendPropertyChanging();
				this._OrderDate = value;
				this.SendPropertyChanged("OrderDate");
				this.OnOrderDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
	public string CustomerId
	{
		get
		{
			return this._CustomerId;
		}
		set
		{
			if ((this._CustomerId != value))
			{
				if (this._Customer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCustomerIdChanging(value);
				this.SendPropertyChanging();
				this._CustomerId = value;
				this.SendPropertyChanged("CustomerId");
				this.OnCustomerIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductNo", DbType="Int NOT NULL")]
	public int ProductNo
	{
		get
		{
			return this._ProductNo;
		}
		set
		{
			if ((this._ProductNo != value))
			{
				if (this._Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnProductNoChanging(value);
				this.SendPropertyChanging();
				this._ProductNo = value;
				this.SendPropertyChanged("ProductNo");
				this.OnProductNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
	public int Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_OrderDetail_Customer", Storage="_Customer", ThisKey="CustomerId", OtherKey="CustomerId", IsForeignKey=true)]
	public Customer Customer
	{
		get
		{
			return this._Customer.Entity;
		}
		set
		{
			Customer previousValue = this._Customer.Entity;
			if (((previousValue != value) 
						|| (this._Customer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Customer.Entity = null;
					previousValue.OrderDetail.Remove(this);
				}
				this._Customer.Entity = value;
				if ((value != null))
				{
					value.OrderDetail.Add(this);
					this._CustomerId = value.CustomerId;
				}
				else
				{
					this._CustomerId = default(string);
				}
				this.SendPropertyChanged("Customer");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_OrderDetail_Product", Storage="_Product", ThisKey="ProductNo", OtherKey="ProductNo", IsForeignKey=true)]
	public Product Product
	{
		get
		{
			return this._Product.Entity;
		}
		set
		{
			Product previousValue = this._Product.Entity;
			if (((previousValue != value) 
						|| (this._Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Product.Entity = null;
					previousValue.OrderDetail.Remove(this);
				}
				this._Product.Entity = value;
				if ((value != null))
				{
					value.OrderDetail.Add(this);
					this._ProductNo = value.ProductNo;
				}
				else
				{
					this._ProductNo = default(int);
				}
				this.SendPropertyChanged("Product");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ProductNo;
	
	private decimal _Price;
	
	private int _Stock;
	
	private EntitySet<OrderDetail> _OrderDetail;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductNoChanging(int value);
    partial void OnProductNoChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnStockChanging(int value);
    partial void OnStockChanged();
    #endregion
	
	public Product()
	{
		this._OrderDetail = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetail), new Action<OrderDetail>(this.detach_OrderDetail));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductNo", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ProductNo
	{
		get
		{
			return this._ProductNo;
		}
		set
		{
			if ((this._ProductNo != value))
			{
				this.OnProductNoChanging(value);
				this.SendPropertyChanging();
				this._ProductNo = value;
				this.SendPropertyChanged("ProductNo");
				this.OnProductNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(8,2) NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Int NOT NULL")]
	public int Stock
	{
		get
		{
			return this._Stock;
		}
		set
		{
			if ((this._Stock != value))
			{
				this.OnStockChanging(value);
				this.SendPropertyChanging();
				this._Stock = value;
				this.SendPropertyChanged("Stock");
				this.OnStockChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_OrderDetail_Product", Storage="_OrderDetail", ThisKey="ProductNo", OtherKey="ProductNo", DeleteRule="NO ACTION")]
	public EntitySet<OrderDetail> OrderDetail
	{
		get
		{
			return this._OrderDetail;
		}
		set
		{
			this._OrderDetail.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_OrderDetail(OrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Product = this;
	}
	
	private void detach_OrderDetail(OrderDetail entity)
	{
		this.SendPropertyChanging();
		entity.Product = null;
	}
}
#pragma warning restore 1591
